name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Download YOLO Model
      run: |
        mkdir -p app/src/main/assets
        echo "Downloading YOLOv8n TFLite model..."
        # Try official Ultralytics repository first
        curl -L "https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov8n.tflite" -o app/src/main/assets/yolov8n.tflite || \
        # Fallback: Generate using Python
        (pip install ultralytics && python3 -c "from ultralytics import YOLO; model = YOLO('yolov8n.pt'); model.export(format='tflite')" && mv yolov8n.tflite app/src/main/assets/) || \
        echo "Model download will happen at runtime"
    
    - name: Build with Gradle
      run: ./gradlew assembleDebug --stacktrace
    
    - name: Sign APK
      run: |
        echo "APK built successfully!"
        ls -lh app/build/outputs/apk/debug/
    
    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: car-detector-apk
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
    
    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: app/build/outputs/apk/debug/app-debug.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
